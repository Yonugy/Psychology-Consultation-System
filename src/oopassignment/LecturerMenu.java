/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oopassignment;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class LecturerMenu extends javax.swing.JFrame {
    public String lecID;
    /**
     * Creates new form LecturerMenu
     */
    public LecturerMenu(String lecID) {
        initComponents();
        this.lecID=lecID;
        completedBtn.setEnabled(false);
        checkFeedbackBtn.setEnabled(false);
        slotsTable.getColumnModel().getColumn(0).setWidth(0);
        slotsTable.getColumnModel().getColumn(0).setMinWidth(0);
        slotsTable.getColumnModel().getColumn(0).setMaxWidth(0); 
        slotsTable.getColumnModel().getColumn(1).setWidth(0);
        slotsTable.getColumnModel().getColumn(1).setMinWidth(0);
        slotsTable.getColumnModel().getColumn(1).setMaxWidth(0);
        slotsTable.getColumnModel().getColumn(5).setWidth(0);
        slotsTable.getColumnModel().getColumn(5).setMinWidth(0);
        slotsTable.getColumnModel().getColumn(5).setMaxWidth(0);
        slotsTable.getColumnModel().getColumn(6).setWidth(0);
        slotsTable.getColumnModel().getColumn(6).setMinWidth(0);
        slotsTable.getColumnModel().getColumn(6).setMaxWidth(0);
        refreshApp();
    }

    public String getLecID() {
        return lecID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        slotsTable = new javax.swing.JTable();
        vewAppBtn = new javax.swing.JButton();
        scheduledBox = new javax.swing.JCheckBox();
        bookedBox = new javax.swing.JCheckBox();
        reschedulingBox = new javax.swing.JCheckBox();
        completedBox = new javax.swing.JCheckBox();
        canceledBox = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        completedBtn = new javax.swing.JButton();
        checkFeedbackBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        approveRejectBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        slotsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Consultation ID", "Student", "Date", "Time", "Duration (min)", "Lecturer Feedback", "Student Feedback", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        slotsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        slotsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                slotsTableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(slotsTable);

        vewAppBtn.setText("View Slots");
        vewAppBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vewAppBtnActionPerformed(evt);
            }
        });

        scheduledBox.setSelected(true);
        scheduledBox.setText("Scheduled");
        scheduledBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduledBoxActionPerformed(evt);
            }
        });

        bookedBox.setSelected(true);
        bookedBox.setText("Booked");
        bookedBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookedBoxActionPerformed(evt);
            }
        });

        reschedulingBox.setSelected(true);
        reschedulingBox.setText("Rescheduling");
        reschedulingBox.setToolTipText("");
        reschedulingBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reschedulingBoxActionPerformed(evt);
            }
        });

        completedBox.setSelected(true);
        completedBox.setText("Completed");
        completedBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completedBoxActionPerformed(evt);
            }
        });

        canceledBox.setSelected(true);
        canceledBox.setText("Canceled");
        canceledBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canceledBoxActionPerformed(evt);
            }
        });

        jButton1.setText("Create Slot");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        completedBtn.setText("Completed");
        completedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completedBtnActionPerformed(evt);
            }
        });

        checkFeedbackBtn.setText("Check Feedback");
        checkFeedbackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkFeedbackBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        approveRejectBtn.setText("Approve/Reject");
        approveRejectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveRejectBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vewAppBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reschedulingBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scheduledBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookedBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(completedBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(canceledBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 14, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkFeedbackBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(completedBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(approveRejectBtn, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(54, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(vewAppBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scheduledBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bookedBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reschedulingBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(completedBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(canceledBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkFeedbackBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(completedBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(approveRejectBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void refreshApp(){
        completedBtn.setEnabled(false);
        String lecID = getLecID();
        String path="";
        DefaultTableModel model = (DefaultTableModel) slotsTable.getModel();
        model.setRowCount(0);
        path = "consultation.txt";
        boolean scheduled = scheduledBox.isSelected();
        boolean booked = bookedBox.isSelected();
        boolean rescheduling = reschedulingBox.isSelected();
        boolean completed = completedBox.isSelected();
        boolean canceled = canceledBox.isSelected();
        try (BufferedReader br = new BufferedReader(new FileReader(path))) {
            String line;
            String[] rowData;
            String status;
            line = br.readLine();
            // Read file line by line
            while ((line = br.readLine()) != null) {
                // Split the line by commas (or any other delimiter)
                rowData = line.split(",");
                status = rowData[8].trim();
                String[] takeData = {rowData[0],rowData[2],rowData[3],rowData[4],rowData[5],rowData[6],rowData[7],rowData[8]};
                if (rowData[1].trim().equals(lecID)){
                    if (status.equals("Scheduled") && scheduled){
                        model.addRow(takeData);
                    }else if (status.equals("Booked") && booked){
                        model.addRow(takeData);
                    }else if (status.equals("Rescheduling") && rescheduling){
                        model.addRow(takeData);
                    }else if (status.equals("Completed") && completed){
                        model.addRow(takeData);
                    }else if (status.equals("Canceled") && canceled){
                        model.addRow(takeData);
                    }   
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading file!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        completedBtn.setEnabled(false);
        checkFeedbackBtn.setEnabled(false);
        cancelBtn.setEnabled(false);
        approveRejectBtn.setEnabled(false);
    }
    
    private void slotsTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_slotsTableMousePressed
        int row = slotsTable.getSelectedRow();
        String status = slotsTable.getModel().getValueAt(row, 7).toString().trim();
//        String stuFeedback = slotsTable.getModel().getValueAt(row, 5).toString().trim();
        if (status.equals("Booked")){
            completedBtn.setEnabled(true);
            checkFeedbackBtn.setEnabled(false);
            cancelBtn.setEnabled(false);
            approveRejectBtn.setEnabled(false);
        }else if (status.equals("Completed")){
            checkFeedbackBtn.setEnabled(true);
            completedBtn.setEnabled(false);
            cancelBtn.setEnabled(false);
            approveRejectBtn.setEnabled(false);
        }else if (status.equals("Scheduled")){
            cancelBtn.setEnabled(true);
            completedBtn.setEnabled(false);
            checkFeedbackBtn.setEnabled(false);
            approveRejectBtn.setEnabled(false);
        }else if (status.equals("Rescheduling")){
            approveRejectBtn.setEnabled(true);
            completedBtn.setEnabled(false);
            checkFeedbackBtn.setEnabled(false);
            cancelBtn.setEnabled(false);
        }else{
            completedBtn.setEnabled(false);
            checkFeedbackBtn.setEnabled(false);
            cancelBtn.setEnabled(false);
            approveRejectBtn.setEnabled(false);
        }
    }//GEN-LAST:event_slotsTableMousePressed

    private void vewAppBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vewAppBtnActionPerformed
        refreshApp();
    }//GEN-LAST:event_vewAppBtnActionPerformed

    private void bookedBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookedBoxActionPerformed
        refreshApp();
    }//GEN-LAST:event_bookedBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String lecID = getLecID();
        new CreateSlot(lecID).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void scheduledBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduledBoxActionPerformed
        refreshApp();
    }//GEN-LAST:event_scheduledBoxActionPerformed

    private void reschedulingBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reschedulingBoxActionPerformed
        refreshApp();
    }//GEN-LAST:event_reschedulingBoxActionPerformed

    private void completedBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completedBoxActionPerformed
        refreshApp();
    }//GEN-LAST:event_completedBoxActionPerformed

    private void canceledBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canceledBoxActionPerformed
        refreshApp();
    }//GEN-LAST:event_canceledBoxActionPerformed

    private void completedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completedBtnActionPerformed
        String feedback = JOptionPane.showInputDialog(null,"Please provide a feedback:");
        if (!feedback.trim().equals("")){
            int row = slotsTable.getSelectedRow();
            String consID = slotsTable.getModel().getValueAt(row, 0).toString();
            changeConsultation("Completed",consID,"",feedback);
        }
    }//GEN-LAST:event_completedBtnActionPerformed

    private void changeConsultation(String action, String consID, String dt, String fb){
        String path = "consultation.txt";
        String lecID = getLecID();
        String newContent="Consultation Slot ID, Lecturer ID, Student ID, Date, Time, Duration (min), Lecturer Feedback, Student Feedback, Status";
        try (BufferedReader br = new BufferedReader(new FileReader(path))) {
            String line;
            String[] rowData;
            line = br.readLine();
            // Read file line by line
            while ((line = br.readLine()) != null) {
                rowData = line.split(",");
                if (rowData[0].equals(consID)){
                    line="";
                    String add="";
                    for (int i =0;i<rowData.length;i++){
                        if (i==rowData.length-1){
                            add=" "+action;
                        }else if (i==3 && dt!=""){
                            add=" "+dt+",";
                            i++;
                        }else if (i==6 && fb!=""){
                            add=" "+fb+",";
                        }else{
                            add=rowData[i]+",";
                        }
                        line=line+add;
                    }
                }
                newContent = newContent + "\n" + line;
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        try{
            FileWriter writer = new FileWriter(path, false);
            writer.write(newContent);
            writer.close();
        }catch (IOException e) {
            e.printStackTrace();
        }
        refreshApp();
    }
    
    private void checkFeedbackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkFeedbackBtnActionPerformed
        int row = slotsTable.getSelectedRow();
        String feedback = slotsTable.getModel().getValueAt(row, 6).toString();
        if (feedback.trim().equals("-")){
            JOptionPane.showMessageDialog(null, "No feedback provided.");
        }else{
            JOptionPane.showMessageDialog(null, feedback);
        }
    }//GEN-LAST:event_checkFeedbackBtnActionPerformed

    private void approveRejectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveRejectBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_approveRejectBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Confirm cancel slot?","Confirmation",dialogButton);
        if (dialogResult==0){
            int row = slotsTable.getSelectedRow();
            String consID = slotsTable.getModel().getValueAt(row, 0).toString();
            changeConsultation("Canceled",consID,"","");
        }
    }//GEN-LAST:event_cancelBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LecturerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LecturerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LecturerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LecturerMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LecturerMenu("6").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveRejectBtn;
    private javax.swing.JCheckBox bookedBox;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JCheckBox canceledBox;
    private javax.swing.JButton checkFeedbackBtn;
    private javax.swing.JCheckBox completedBox;
    private javax.swing.JButton completedBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox reschedulingBox;
    private javax.swing.JCheckBox scheduledBox;
    private javax.swing.JTable slotsTable;
    private javax.swing.JButton vewAppBtn;
    // End of variables declaration//GEN-END:variables
}
